<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>common.toolkit.ourfuture</groupId>
	<artifactId>common-toolkit</artifactId>
	<name>common-toolkit</name>
	<version>0.0.6-SNAPSHOT</version>
	<packaging>jar</packaging>

	<properties>
		<source.encoding>UTF-8</source.encoding>
		<java.version>1.6</java.version>
		<!-- 请自行修改仓库地址 -->
		<repository.snapshots.url>http://192.168.9.6:8081/nexus/content/repositories/deploysnapshots/</repository.snapshots.url>
		<repository.releases.url>http://192.168.9.6:8081/nexus/content/repositories/deploy/</repository.releases.url>
		<!-- Maven plugin -->
		<maven-source-plugin.version>2.0.3</maven-source-plugin.version>
		<maven-compiler-plugin.version>2.0.2</maven-compiler-plugin.version>
		<maven-jar-plugin.version>2.3.2</maven-jar-plugin.version>

		<commons-dbcp.version>1.3</commons-dbcp.version>
		<c3p0.version>0.9.1.2</c3p0.version>
		<mysql-connector.version>5.1.18</mysql-connector.version>
		<servlet.version>2.5</servlet.version>
		<spring.version>3.1.0.RELEASE</spring.version>
		<spring.core.version>3.1.0.RELEASE</spring.core.version>
		<junit.version>4.8.2</junit.version>
		<spring.mock.version>2.0-rc2</spring.mock.version>
		<commons-logging.version>1.1.1</commons-logging.version>
		<slf4j.version>1.7.7</slf4j.version>
		<log4j.version>1.2.14</log4j.version>
		<javamail.version>1.4.3</javamail.version>
		<ganymed.ssh.version>build210</ganymed.ssh.version>
		<httpclient.version>3.1</httpclient.version>
		<jsontools.version>1.7</jsontools.version>
		<json.version>20160212</json.version>
		<gson.version>2.1</gson.version>
        <commons-httpclient.version>3.1</commons-httpclient.version>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven-source-plugin.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven-jar-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<encoding>${source.encoding}</encoding>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<!-- 代码混淆-->
			<!--<plugin>
				<groupId>com.github.wvengen</groupId>
				<artifactId>proguard-maven-plugin</artifactId>
				<version>2.0.7</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>proguard</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<attach>true</attach>
					<attachArtifactClassifier>pg</attachArtifactClassifier>
					&lt;!&ndash; attach 的作用是在 install 与 deploy 时将生成的 pg 文件也安装与部署 &ndash;&gt;
					<options>
						&lt;!&ndash;详细配置方式参考 ProGuard 官方文档 &ndash;&gt;
						&lt;!&ndash;<option>-dontobfuscate</option>&ndash;&gt;
						<option>-ignorewarnings</option>
						&lt;!&ndash;忽略所有告警&ndash;&gt;
						<option>-dontshrink</option>
						&lt;!&ndash;不做shrink &ndash;&gt;
						<option>-dontoptimize</option>
						&lt;!&ndash;不做 optimize &ndash;&gt;
						<option>-dontskipnonpubliclibraryclasses</option>
						<option>-dontskipnonpubliclibraryclassmembers</option>
						<option>-repackageclasses
							org.noahx.proguard.example.project2.pg</option>
						&lt;!&ndash;平行包结构（重构包层次），所有混淆的类放在pg 包下&ndash;&gt;
						&lt;!&ndash;以下为 Keep，哪些内容保持不变，因为有一些内容混淆后（a,b,c）导致反射或按类名字符串相关的操作失效 &ndash;&gt;
						<option>-keep
							class **.package-info</option>
						&lt;!&ndash;保持包注解类&ndash;&gt;
						<option>-keepattributes
							Signature</option>
						&lt;!&ndash;JAXBNEED，具体原因不明，不加会导致 JAXB 出异常，如果不使用 JAXB 根据需要修改&ndash;&gt;
&lt;!&ndash;Jaxb requires generics to be available to perform xml parsing and without this option ProGuard was not retaining that information after obfuscation. That was causing the exception above. &ndash;&gt;
						<option>-keepattributes
							SourceFile,LineNumberTable,*Annotation*</option>
						&lt;!&ndash;保持源码名与行号（异常时有明确的栈信息），注解（默认会过滤掉所有注解，会影响框架的注解）&ndash;&gt;
						<option>-keepclassmembers
							enum org.noahx.proguard.example.project2.** { *;}</option>
						&lt;!&ndash;保持枚举中的名子，确保枚举valueOf 可以使用&ndash;&gt;
						<option>-keep
							class org.noahx.proguard.example.project2.bean.** { *;}</option>
						&lt;!&ndash;保持Bean 类，（由于很多框架会对 Bean 中的内容做反射处理，请根据自己的业务调整） &ndash;&gt;
						<option>-keep
							class org.noahx.proguard.example.project2.Project2 { public void init(); public void
							destroy();
							}
						</option>
						&lt;!&ndash;保持对外的接口性质类对外的类名与方法名不变 &ndash;&gt;
					</options>
					<outjar>${project.build.finalName}-pg</outjar>
					<libs>
						<lib>${java.home}/lib/rt.jar</lib>
					</libs>
				</configuration>
			</plugin>-->

		</plugins>
	</build>


	<dependencyManagement>
		<dependencies>

			<!-- Test -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- Spring -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-mock</artifactId>
				<scope>test</scope>
				<version>${spring.mock.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<scope>provided</scope>
				<version>${spring.core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.version}</version>
				<scope>provided</scope>
			</dependency>


			<!-- Servlet -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${servlet.version}</version>
				<scope>provided</scope>
			</dependency>



			<!-- 数据库 -->
			<dependency>
				<groupId>commons-dbcp</groupId>
				<artifactId>commons-dbcp</artifactId>
				<version>${commons-dbcp.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>c3p0</groupId>
				<artifactId>c3p0</artifactId>
				<version>${c3p0.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql-connector.version}</version>
				<scope>provided</scope>
			</dependency>


			<!-- HttpClient -->
			<!--<dependency>
				<groupId>apache-httpclient</groupId>
				<artifactId>commons-httpclient</artifactId>
				<version>${httpclient.version}</version>
			</dependency>-->
			<!-- https://mvnrepository.com/artifact/commons-httpclient/commons-httpclient -->
			<dependency>
				<groupId>commons-httpclient</groupId>
				<artifactId>commons-httpclient</artifactId>
				<version>${commons-httpclient.version}</version>
			</dependency>

			<!-- SSH远程 -->
			<dependency>
				<groupId>ch.ethz.ganymed</groupId>
				<artifactId>ganymed-ssh2</artifactId>
				<scope>provided</scope>
				<version>${ganymed.ssh.version}</version>
			</dependency>

			<!-- Java Mail -->
			<dependency>
				<groupId>javax.mail</groupId>
				<artifactId>mail</artifactId>
				<version>${javamail.version}</version>
				<scope>provided</scope>
			</dependency>


			<!-- JSON -->
			<dependency>
				<groupId>com.sdicons.jsontools</groupId>
				<artifactId>jsontools-core</artifactId>
				<version>${jsontools.version}</version>
				<scope>provided</scope>
			</dependency>
			<!--<dependency>
				<groupId>org.json</groupId>
				<artifactId>json</artifactId>
				<version>${json.version}</version>
				<scope>provided</scope>
			</dependency>-->
			<!-- https://mvnrepository.com/artifact/org.json/json -->
			<dependency>
				<groupId>org.json</groupId>
				<artifactId>json</artifactId>
                <scope>provided</scope>
				<version>${json.version}</version>
			</dependency>

			<dependency>
				<groupId>com.google.code.gson</groupId>
				<artifactId>gson</artifactId>
				<version>${gson.version}</version>
				<scope>provided</scope>
			</dependency>


			<!-- Log -->
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>${commons-logging.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
				<scope>provided</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>


	<dependencies>
		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-mock</artifactId>
		</dependency>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>
		<!-- HttpClient -->
		<!--<dependency>
			<groupId>apache-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
		</dependency>-->
		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
		</dependency>
		<!-- Log -->


		<!-- Java Mail -->
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
		</dependency>

		<!-- SSH远程 -->
		<dependency>
			<groupId>ch.ethz.ganymed</groupId>
			<artifactId>ganymed-ssh2</artifactId>
		</dependency>

		<!-- JSON -->
		<dependency>
			<groupId>com.sdicons.jsontools</groupId>
			<artifactId>jsontools-core</artifactId>
		</dependency>
		<!--<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
		</dependency>-->
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <!--<version>${json.version}</version>-->
        </dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency>

		<!-- 数据库 -->
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
		</dependency>
		<dependency>
			<groupId>c3p0</groupId>
			<artifactId>c3p0</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <!--<version>3.1</version>-->
        </dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
		</dependency>
		<dependency>
			<groupId>org.apache.zookeeper</groupId>
			<artifactId>zookeeper</artifactId>
			<version>3.4.8</version>
		</dependency>

	</dependencies>

	<!--<distributionManagement>
		<repository>
			<id>deploy</id>
			<url>${repository.releases.url}</url>
		</repository>
		<snapshotRepository>
			<id>deploysnapshots</id>
			<url>${repository.snapshots.url}</url>
		</snapshotRepository>
	</distributionManagement>-->
	<distributionManagement>
		<snapshotRepository>
			<id>deploy</id>
			<name> Nexus Snapshot Repository </name>
			<url> http://192.168.13.243:18081/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>







</project>
